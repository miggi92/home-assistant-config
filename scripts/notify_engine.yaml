---
#####
# Notifications engine - adapted from CCOSTAN
# Original Repo : https://github.com/CCOSTAN/Home-AssistantConfig
#
# Service template is used to select who will receive message.
# It can be used for individual messages but groups too
# for example - Discord sends message to both Discord and me etc.
#
# When you call script from automation, you can specify variables provided below to tweak ho notification will behave.
#
# List of variables you can used when calling this script:
#
# who:            List of available platforms and variable that is used to select where to push notification
# title:          Title of the message - not all notification platforms support this
# value1:         value variables are used as messge body. Up to 3 lines can be used
# value2:
# value3:
# target_id:      Some platforms require you to specify target ID of the channel for message in ex. Discord, Telegram etc
#
# Additional variables that can be used to further customize Companion App notifications
# tag_id:         Used to tag notifications, useful for mobile app notifications
# group:          Used to group notificatrions, useful for mobile app notifications
#####
notify_engine:
  fields:
    title:
      selector:
        text: null
      name: Title
      description: Titel der Benachrichtigung
      required: true
    value1:
      selector:
        text:
          multiline: true
      name: Message part 1
      description: Benachrichtigungsinhalt Teil 1
      required: true
    value2:
      selector:
        text:
          multiline: true
      name: Message part 2
      description: Benachrichtigungsinhalt Teil 2
    value3:
      selector:
        text:
          multiline: true
      name: Message part 3
      description: Benachrichtigungsinhalt Teil 3
    who:
      selector:
        select:
          options:
            - home
            - miguel
            - silke
            - work
            - tv
            - family
      default: home
      name: Who
      description: An wen soll die Benachrichtigung gehen?
    photo:
      selector:
        text: null
      name: Foto
      description: Foto URL
    group:
      selector:
        text: null
      name: Gruppe
      description: Gruppe
    tag_id:
      selector:
        select:
          options:
            - information
            - alert
      default: information
      name: Tag
      description: Tag ID
    photos:
      selector:
        object: null
      name: Fotos
      description: Fotos
    inline_keyboard:
      selector:
        object: null
      name: Inline keyboard
      description: MÃ¶glichkeit auf Nachrichten direkt zu antworten
  mode: parallel
  sequence:
    - condition: or
      conditions:
        - condition: state
          entity_id: input_boolean.text_notifications
          state: "on"
    - variables:
        notifiers:
          home: notify.telegram_home_group
          miguel: notify.miguel_telegram
          silke: notify.silke_telegram
          work: notify.html5_workmiguellaptop
          tv: notify.gtv
          family: notify.signalfamily
        notifier: "{{ notifiers.get(who, 'notify.miguel_telegram') }}"
        title: ""
        value1: ""
        value2: ""
        value3: ""
        group: ""
        tag_id: "information"
    - choose:
        - conditions:
            - condition: template
              value_template: "{{ 'telegram' in notifier }}"
          sequence:
            - action: "{{ notifier }}"
              alias: "Send notification via telegram"
              data:
                title: "{{ title  }}"
                message: "{{ value1  }} {{ value2  }} {{ value3  }}"
                data: >
                  {% set data = {} %}
                  {% if photo %}
                    {% set data = data.update({'photo': [{'url': photo, 'caption': value1  ~ ' ' ~ value2  ~ ' ' ~ value3 | default}]}) %}
                  {% elif photos %}
                    {% set data = data.update({'photo': photos}) %}
                  {% endif %}
                  {{ data }}
        - conditions:
            - condition: template
              value_template: "{{ who == 'tv' }}"
          sequence:
            - action: "{{ notifier }}"
              alias: "Send Notification to TV"
              data:
                title: "{{ title  }}"
                message: "{{ value1 }} {{ value2 }} {{ value3 }}"
                data:
                  image:
                    url: "{{ photo  }}"
        - conditions:
            - condition: template
              value_template: "{{ 'signal' in notifier }}"
          sequence:
            - action: "{{ notifier }}"
              alias: "Signal notification "
              data:
                title: "{{ title }}"
                message: "{{ value1 }} {{ value2 }}"
      default:
        - action: "{{ notifier }}"
          alias: "Default notification"
          data:
            title: "{{ title }}"
            message: "{{ value1 }} {{ value2 }} {{ value3 }}"
            data:
              group: "{{ group }}"
              tag: "{{ tag_id }}"
              image: "{{ photo }}"
    - parallel:
        - if:
            - condition: state
              entity_id: device_tracker.gtv
              state: "home"
            - condition: not
              conditions:
                - condition: state
                  entity_id: media_player.gtv
                  state: "off"
            - condition: template
              value_template: "{{ who != 'tv' }}"
          then:
            - action: script.notify_engine
              data:
                title: "{{ title }}"
                value1: "{{ value1 }}"
                value2: "{{ value2 }}"
                value3: "{{ value3 }}"
                who: "tv"
                group: "{{ group }}"
                photo: "{{ photo }}"
                tag_id: "{{ tag_id }}"
        - if:
            - condition: state
              entity_id: device_tracker.bcwmc5cg4100cy0
              state: "home"
            - condition: template
              value_template: "{{ who != 'work' }}"
          then:
            - action: script.notify_engine
              data:
                title: "{{ title }}"
                value1: "{{ value1 }}"
                value2: "{{ value2 }}"
                value3: "{{ value3 }}"
                who: "work"
                group: "{{ group }}"
                photo: "{{ photo }}"
                tag_id: "{{ tag_id }}"
      alias: "Duplizieren der Nachrichten wenn andere Screens gerade verwendet werden"
