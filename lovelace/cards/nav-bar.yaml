---
# navbar
type: custom:navbar-card
routes:
  - url: /lovelace-mobile/start
    icon_selected: mdi:home
    icon: mdi:home-outline
    label: Startseite
  - icon: mdi:home-floor-negative-1
    label: "UG"
    tap_action: { action: open-popup }
    popup: |
      [[[
        return Object.values(hass.areas)
          .filter(area => area.floor_id === 'keller')
          .map(area => ({
            label: area.name,
            url: "/lovelace-mobile/room-ug-" + area.area_id,
            icon: area.icon
          }));
      ]]]
    selected: |
      [[[
        const path = window.location.pathname;
        return path.startsWith('/lovelace-mobile/room-ug-');
      ]]]
    badge:
      show: |
        [[[ return states['number.count_lights_ug'].state > 0; ]]]
      count: |
        [[[  return Math.ceil(states['number.count_lights_ug'].state); ]]]
  - icon: mdi:home-floor-g
    label: "EG"
    tap_action: { action: open-popup }
    popup: |
      [[[
        return Object.values(hass.areas)
          .filter(area => area.floor_id === 'eg')
          .map(area => ({
            label: area.name,
            url: "/lovelace-mobile/room-eg-" + area.area_id,
            icon: area.icon
          }));
      ]]]
    selected: |
      [[[
        const path = window.location.pathname;
        return path.startsWith('/lovelace-mobile/room-eg-');
      ]]]
    badge:
      show: |
        [[[ return states['number.count_lights_eg'].state > 0; ]]]
      count: |
        [[[  return Math.ceil(states['number.count_lights_eg'].state); ]]]
  - icon: mdi:home-floor-1
    label: "1. OG"
    tap_action: { action: open-popup }
    popup: |
      [[[
        return Object.values(hass.areas)
          .filter(area => area.floor_id === '1_og')
          .map(area => ({
            label: area.name,
            url: "/lovelace-mobile/room-1og-" + area.area_id,
            icon: area.icon
          }));
      ]]]
    selected: |
      [[[
        const path = window.location.pathname;
        return path.startsWith('/lovelace-mobile/room-1og-');
      ]]]
    badge:
      show: |
        [[[ return states['number.count_lights_1_og'].state > 0; ]]]
      count: |
        [[[  return Math.ceil(states['number.count_lights_1_og'].state); ]]]
  - url: /lovelace-mobile/miguel
    icon: mdi:cog
    label: "Profil"
    image: |
      [[[ return hass.states['person.miguel'].attributes.entity_picture ]]]
    hidden: |
      [[[ return user.name != 'Miguel' ]]]
  - url: /lovelace-mobile/silke
    icon: mdi:cog
    label: "Profil"
    image: |
      [[[ return hass.states['person.silke'].attributes.entity_picture ]]]
    hidden: |
      [[[ return user.name != 'Silke' ]]]
  - icon: mdi:dots-horizontal
    label: Mehr
    tap_action:
      action: open-popup
    popup:
      - icon: mdi:account
        url: /profile/general
      - icon: mdi:cog
        url: /config/dashboard
        hidden: |
          [[[ return user.name != 'Miguel' ]]]
      - icon: mdi:hammer
        url: /developer-tools/yaml
        hidden: |
          [[[ return user.name != 'Miguel' ]]]
      - icon: mdi:power
        hidden: |
          [[[ return user.name != 'Miguel' ]]]
        tap_action:
          action: call-service
          service: homeassistant.restart
          service_data: {}
          confirmation:
            text: Are you sure you want to restart Home Assistant?
desktop:
  position: left
  show_labels: true
  min_width: 768
mobile:
  show_labels: true
media_player:
  entity: media_player.spotify_miguel
  album_cover_background: true
layout:
  auto-padding:
    enabled: true
styles: |
  .image {
    border-radius: 16px !important;
  }
